{"ast":null,"code":"var _jsxFileName = \"/Users/student/development/assignments/module6/02-rock-the-vote/client/src/context/UserProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext(); //Here we want to create a header to hold our token to get controversies by user\n//we create our own instance of axios\n\nconst userAxios = axios.create(); //then we add the Authorization and bearer stuff to it, in the request\n\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport default function UserProvider(props) {\n  _s();\n\n  //console.log('user provider context props:', props)\n  const initState = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n    token: localStorage.getItem(\"token\") || \"\",\n    controversies: [],\n    errMsg: \"\"\n  };\n  const [userState, setUserState] = useState(initState);\n  const storeReviews = useEffect(() => {}, []);\n\n  function signup(credentials) {\n    axios.post(\"/auth/signup\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"token\", token);\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthErr(err.response.data.errMsg));\n  }\n\n  function login(credentials) {\n    axios.post(\"/auth/login\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"token\", token);\n      getUserReviews();\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthErr(err.response.data.errMsg));\n  }\n\n  function logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setUserState({\n      user: {},\n      token: \"\",\n      controversies: []\n    });\n  }\n\n  function handleAuthErr(errMsg) {\n    setUserState(prevState => ({ ...prevState,\n      errMsg\n    }));\n  }\n\n  function resetAuthErr() {\n    setUserState(prevState => ({ ...prevState,\n      errMsg: \"\"\n    }));\n  }\n\n  function getUserReviews() {\n    //the userAxios has the token in it now\n    userAxios.get(\"/api/controversies/user\").then(res => {\n      setUserState(prevState => ({ ...prevState,\n        controversies: res.data\n      }), console.log(\"in context controversies: \", userState.controversies));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function addReview(newReview) {\n    //the userAxios has the token in it now\n    userAxios.post(\"/api/controversies\", newReview).then(res => {\n      setUserState(prevState => ({ ...prevState,\n        controversies: [...prevState.controversies, newReview]\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: { ...userState,\n      signup,\n      login,\n      logout,\n      addReview,\n      resetAuthErr\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProvider, \"253Mwj9PBNkNTQ+dnAjWljZhQGE=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/student/development/assignments/module6/02-rock-the-vote/client/src/context/UserProvider.js"],"names":["React","useState","useEffect","axios","UserContext","createContext","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","UserProvider","props","initState","user","JSON","parse","controversies","errMsg","userState","setUserState","storeReviews","signup","credentials","post","then","res","data","setItem","stringify","prevUserState","catch","err","handleAuthErr","response","login","getUserReviews","logout","removeItem","prevState","resetAuthErr","get","console","log","addReview","newReview","children"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport const UserContext = React.createContext()\n\n//Here we want to create a header to hold our token to get controversies by user\n//we create our own instance of axios\nconst userAxios = axios.create()\n//then we add the Authorization and bearer stuff to it, in the request\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\")\nconfig.headers.Authorization = `Bearer ${token}`\nreturn config\n})\n\nexport default function UserProvider(props) {\n\n//console.log('user provider context props:', props)\n\nconst initState = { \n  user:JSON.parse(localStorage.getItem(\"user\")) || {}, \n  token: localStorage.getItem(\"token\") || \"\",\n  controversies: [],\n  errMsg: \"\"\n}\nconst [ userState, setUserState ] = useState(initState);\nconst storeReviews = useEffect(()=>{}, [])\n\nfunction signup(credentials) {\n  axios.post(\"/auth/signup\", credentials)\n    .then(res => {\n      const { user, token } = res.data\n      localStorage.setItem(\"user\", JSON.stringify(user))\n      localStorage.setItem(\"token\", token)\n      setUserState (prevUserState => ({\n        ...prevUserState, \n        user, \n        token\n      }))\n    })\n    .catch(err => handleAuthErr(err.response.data.errMsg))\n}\n\nfunction login(credentials) {\n  axios.post(\"/auth/login\", credentials)\n  .then(res => {\n    const { user, token } = res.data\n      localStorage.setItem(\"user\", JSON.stringify(user))\n      localStorage.setItem(\"token\", token)\n      getUserReviews()\n      setUserState (prevUserState => ({\n        ...prevUserState, \n        user, \n        token\n      }))\n  })\n  .catch(err => handleAuthErr(err.response.data.errMsg))\n}\n\nfunction logout() {\n  localStorage.removeItem(\"token\")\n  localStorage.removeItem(\"user\")\n  setUserState({\n    user: {},\n    token: \"\",\n    controversies: []\n  })\n}\n\nfunction handleAuthErr(errMsg) {\n  setUserState(prevState => ({\n    ...prevState,\n    errMsg\n  }))\n}\n\nfunction resetAuthErr() {\n  setUserState(prevState => ({\n    ...prevState,\n    errMsg: \"\"\n  }))\n}\n\nfunction getUserReviews() {\n  //the userAxios has the token in it now\n  userAxios.get(\"/api/controversies/user\")\n    .then(res => {\n      setUserState(prevState => ({\n        ...prevState,\n        controversies : res.data\n      }),\n      console.log(\"in context controversies: \",userState.controversies))\n    })\n    .catch(err => console.log(err.response.data.errMsg))\n}\n\nfunction addReview(newReview) {\n  //the userAxios has the token in it now\n  userAxios.post(\"/api/controversies\", newReview)\n  .then(res => {\n    setUserState(prevState => ({\n      ...prevState,\n      controversies: [ ...prevState.controversies, newReview]\n    }))\n  })\n  .catch(err => console.log(err.response.data.errMsg))\n}\n\n  return  (\n    <UserContext.Provider\n      value={{\n        ...userState,\n        signup,\n        login,\n        logout, \n        addReview,\n        resetAuthErr\n      }} >\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}