{"ast":null,"code":"var _jsxFileName = \"/Users/student/development/assignments/module6/02-rock-the-vote/client/src/components/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { ControversyContext } from '../context/ControversyProvider.js';\nimport { UserContext } from '../context/UserProvider.js';\nimport AuthForm from './AuthForm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initInputs = {\n  username: \"\",\n  password: \"\"\n};\n\nfunction Auth() {\n  _s();\n\n  const [inputs, setInputs] = useState(initInputs);\n  const [toggle, setToggle] = useState(false); //Getting the data (which was sent out in object form) from the context provider using the context hook - \n  //I'm just getting part of the data, destructured -ie userData.signup\n\n  const {\n    signup,\n    login,\n    getUserReviews,\n    errMsg,\n    resetAuthErr\n  } = useContext(UserContext); //const { getUserReviews } = useContext(ControversyContext)\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prevInputs => ({ ...prevInputs,\n      [name]: value\n    }));\n  }\n\n  function handleSignup(e) {\n    e.preventDefault();\n    signup(inputs);\n  }\n\n  function handleLogin(e) {\n    e.preventDefault();\n    login(inputs, getUserReviews);\n  }\n\n  function toggleForm() {\n    setToggle(prev => !prev);\n    resetAuthErr();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter to Review & Rant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), !toggle ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AuthForm, {\n        handleChange: handleChange,\n        handleSubmit: handleLogin,\n        inputs: inputs,\n        btnText: \"Log In\",\n        errMsg: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleForm,\n        children: \"Already a member?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AuthForm, {\n        handleChange: handleChange,\n        handleSubmit: handleSignup,\n        inputs: inputs,\n        btnText: \"Sign Up\",\n        errMsg: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleForm,\n        children: \"Not a member yet?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Auth, \"mOPjb5AjH73OsDLPxijJABpfMpM=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/student/development/assignments/module6/02-rock-the-vote/client/src/components/Auth.js"],"names":["React","useState","useContext","ControversyContext","UserContext","AuthForm","initInputs","username","password","Auth","inputs","setInputs","toggle","setToggle","signup","login","getUserReviews","errMsg","resetAuthErr","handleChange","e","name","value","target","prevInputs","handleSignup","preventDefault","handleLogin","toggleForm","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAEA,MAAMC,UAAU,GAAG;AAAEC,EAAAA,QAAQ,EAAE,EAAZ;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAAnB;;AAEA,SAASC,IAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACK,UAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC,CAFa,CAIf;AACA;;AACE,QAAM;AAACa,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,cAAhB;AAAgCC,IAAAA,MAAhC;AAAuCC,IAAAA;AAAvC,MAAwDhB,UAAU,CAACE,WAAD,CAAxE,CANa,CAQb;;AAEA,WAASe,YAAT,CAAsBC,CAAtB,EAAwB;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAZ,IAAAA,SAAS,CAACa,UAAU,KAAK,EACvB,GAAGA,UADoB;AAEvB,OAACH,IAAD,GAAQC;AAFe,KAAL,CAAX,CAAT;AAID;;AAED,WAASG,YAAT,CAAsBL,CAAtB,EAAwB;AACtBA,IAAAA,CAAC,CAACM,cAAF;AACAZ,IAAAA,MAAM,CAACJ,MAAD,CAAN;AACD;;AAED,WAASiB,WAAT,CAAqBP,CAArB,EAAuB;AACrBA,IAAAA,CAAC,CAACM,cAAF;AACAX,IAAAA,KAAK,CAACL,MAAD,EAAQM,cAAR,CAAL;AACD;;AACD,WAASY,UAAT,GAAsB;AACpBf,IAAAA,SAAS,CAACgB,IAAI,IAAI,CAACA,IAAV,CAAT;AACAX,IAAAA,YAAY;AACb;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEI,CAACN,MAAD,gBACA;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,YAAY,EAAEO,YADhB;AAEE,QAAA,YAAY,EAAEQ,WAFhB;AAGE,QAAA,MAAM,EAAEjB,MAHV;AAIE,QAAA,OAAO,EAAC,QAJV;AAKE,QAAA,MAAM,EAAEO;AALV;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,OAAO,EAAEW,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,oBADA,gBAYA;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,YAAY,EAAET,YADhB;AAEE,QAAA,YAAY,EAAEM,YAFhB;AAGE,QAAA,MAAM,EAAEf,MAHV;AAIE,QAAA,OAAO,EAAC,SAJV;AAKE,QAAA,MAAM,EAAEO;AALV;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,OAAO,EAAEW,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA5DQnB,I;;KAAAA,I;AA6DT,eAAeA,IAAf","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { ControversyContext } from '../context/ControversyProvider.js'\nimport { UserContext } from '../context/UserProvider.js'\nimport AuthForm from './AuthForm.js'\n\nconst initInputs = { username: \"\", password: \"\" }\n\nfunction Auth(){\n  const [inputs, setInputs] = useState(initInputs)\n  const [toggle, setToggle] = useState(false)\n\n//Getting the data (which was sent out in object form) from the context provider using the context hook - \n//I'm just getting part of the data, destructured -ie userData.signup\n  const {signup, login, getUserReviews, errMsg,resetAuthErr } = useContext(UserContext)\n\n  //const { getUserReviews } = useContext(ControversyContext)\n\n  function handleChange(e){\n    const {name, value} = e.target\n    setInputs(prevInputs => ({\n      ...prevInputs,\n      [name]: value\n    }))\n  }\n\n  function handleSignup(e){\n    e.preventDefault()\n    signup(inputs)\n  }\n\n  function handleLogin(e){\n    e.preventDefault()\n    login(inputs,getUserReviews)\n  }\n  function toggleForm() {\n    setToggle(prev => !prev)\n    resetAuthErr()\n  }\n\n  return (\n    <div className=\"container auth-container\">\n      <h2>Enter to Review & Rant</h2>\n      { !toggle ?\n        <>\n          <AuthForm \n            handleChange={handleChange}\n            handleSubmit={handleLogin}\n            inputs={inputs}\n            btnText=\"Log In\"\n            errMsg={errMsg}\n          />\n          <button onClick={toggleForm}>Already a member?</button>\n        </>\n      :\n        <>\n          <AuthForm \n            handleChange={handleChange}\n            handleSubmit={handleSignup}\n            inputs={inputs}\n            btnText=\"Sign Up\"\n            errMsg={errMsg}\n          />\n          <button onClick={toggleForm}>Not a member yet?</button>\n        </>\n      }\n    </div>\n  )\n}\nexport default Auth"]},"metadata":{},"sourceType":"module"}