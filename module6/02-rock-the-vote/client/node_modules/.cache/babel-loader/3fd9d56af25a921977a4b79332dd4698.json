{"ast":null,"code":"var _jsxFileName = \"/Users/student/development/assignments/module6/02-rock-the-vote/client/src/context/ControversyProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ControversyContext = /*#__PURE__*/React.createContext(); //Here we want to create a header to hold our token to get controversies by user\n//we create our own instance of axios\n\nconst userAxios = axios.create(); //then we add the Authorization and bearer stuff to it, in the request\n\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport default function ControversyProvider(props) {\n  _s();\n\n  const initialState = {\n    controversiesByCurrentUser: [] //controversies: [],\n    // comments: [],\n    // upVotes: 0,\n    // downVotes: 0\n\n  };\n  const [reviewState, setReviewState] = useState(initialState); //console.log(\"in context controversies: \", reviewState.controversiesByCurrentUser)\n  //* we use the below in the login function to show reviews immediately, but we also need to use it in useEffect to persist them, because ... (?)\n\n  function getUserReviews() {\n    //the userAxios has the token in it now\n    userAxios.get(\"/api/controversies/user\").then(res => {\n      setReviewState(prevState => ({ ...prevState,\n        controversiesByCurrentUser: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  useEffect(() => {\n    getUserReviews();\n  }, []);\n\n  function addReview(newReview) {\n    //the userAxios has the token in it now\n    userAxios.post(\"/api/controversies\", newReview).then(res => {\n      setReviewState(prevState => ({ ...prevState,\n        controversiesByCurrentUser: [...prevState.controversiesByCurrentUser, newReview]\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  return /*#__PURE__*/_jsxDEV(ControversyContext.Provider, {\n    value: { ...reviewState,\n      getUserReviews,\n      addReview\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControversyProvider, \"P2Jtr9MN3q+bdNBtNXrdpy77IFU=\");\n\n_c = ControversyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControversyProvider\");","map":{"version":3,"sources":["/Users/student/development/assignments/module6/02-rock-the-vote/client/src/context/ControversyProvider.js"],"names":["React","useState","useEffect","axios","ControversyContext","createContext","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","ControversyProvider","props","initialState","controversiesByCurrentUser","reviewState","setReviewState","getUserReviews","get","then","res","prevState","data","catch","err","console","log","response","errMsg","addReview","newReview","post","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,kBAAkB,gBAAGJ,KAAK,CAACK,aAAN,EAA3B,C,CAGP;AACA;;AACA,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,EAAlB,C,CACA;;AACAD,SAAS,CAACE,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmCC,MAAM,IAAI;AAC3C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACFH,EAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;AACA,SAAOD,MAAP;AACC,CAJD;AAQA,eAAe,SAASM,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAEnD,QAAMC,YAAY,GAAG;AACnBC,IAAAA,0BAA0B,EAAE,EADT,CAEnB;AACA;AACA;AACA;;AALmB,GAArB;AAOA,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAiCrB,QAAQ,CAACkB,YAAD,CAA/C,CATmD,CAUnD;AAEA;;AACA,WAASI,cAAT,GAA0B;AACxB;AACAjB,IAAAA,SAAS,CAACkB,GAAV,CAAc,yBAAd,EACGC,IADH,CACQC,GAAG,IAAI;AACXJ,MAAAA,cAAc,CAACK,SAAS,KAAK,EAC3B,GAAGA,SADwB;AAE3BP,QAAAA,0BAA0B,EAAEM,GAAG,CAACE;AAFL,OAAL,CAAV,CAAd;AAKD,KAPH,EAQGC,KARH,CAQSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAJ,CAAaL,IAAb,CAAkBM,MAA9B,CARhB;AASD;;AAEDhC,EAAAA,SAAS,CAAC,MAAI;AACZqB,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASY,SAAT,CAAmBC,SAAnB,EAA8B;AAC5B;AACA9B,IAAAA,SAAS,CAAC+B,IAAV,CAAe,oBAAf,EAAqCD,SAArC,EACCX,IADD,CACMC,GAAG,IAAI;AACXJ,MAAAA,cAAc,CAACK,SAAS,KAAK,EAC3B,GAAGA,SADwB;AAE3BP,QAAAA,0BAA0B,EAAE,CAAE,GAAGO,SAAS,CAACP,0BAAf,EAA2CgB,SAA3C;AAFD,OAAL,CAAV,CAAd;AAID,KAND,EAOCP,KAPD,CAOOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAJ,CAAaL,IAAb,CAAkBM,MAA9B,CAPd;AAQD;;AAGC,sBACE,QAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE,EACL,GAAGb,WADE;AAELE,MAAAA,cAFK;AAGLY,MAAAA;AAHK,KADT;AAAA,cAMGjB,KAAK,CAACoB;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtDuBrB,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport const ControversyContext = React.createContext()\n\n\n//Here we want to create a header to hold our token to get controversies by user\n//we create our own instance of axios\nconst userAxios = axios.create()\n//then we add the Authorization and bearer stuff to it, in the request\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\")\nconfig.headers.Authorization = `Bearer ${token}`\nreturn config\n})\n\n\n\nexport default function ControversyProvider(props) {\n\nconst initialState = {\n  controversiesByCurrentUser: []\n  //controversies: [],\n  // comments: [],\n  // upVotes: 0,\n  // downVotes: 0\n}\nconst [ reviewState, setReviewState] = useState(initialState)\n//console.log(\"in context controversies: \", reviewState.controversiesByCurrentUser)\n\n//* we use the below in the login function to show reviews immediately, but we also need to use it in useEffect to persist them, because ... (?)\nfunction getUserReviews() {\n  //the userAxios has the token in it now\n  userAxios.get(\"/api/controversies/user\")\n    .then(res => {\n      setReviewState(prevState => ({\n        ...prevState,\n        controversiesByCurrentUser: res.data\n      })\n     )\n    })\n    .catch(err => console.log(err.response.data.errMsg))\n}\n\nuseEffect(()=>{\n  getUserReviews()\n}, [])\n\nfunction addReview(newReview) {\n  //the userAxios has the token in it now\n  userAxios.post(\"/api/controversies\", newReview)\n  .then(res => {\n    setReviewState(prevState => ({\n      ...prevState,\n      controversiesByCurrentUser: [ ...prevState.controversiesByCurrentUser, newReview]\n    }))\n  })\n  .catch(err => console.log(err.response.data.errMsg))\n}\n\n\n  return (\n    <ControversyContext.Provider\n      value={{\n        ...reviewState,\n        getUserReviews,\n        addReview\n      }} >\n      {props.children}\n    </ControversyContext.Provider>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}