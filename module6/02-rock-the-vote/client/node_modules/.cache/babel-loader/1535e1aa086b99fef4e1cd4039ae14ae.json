{"ast":null,"code":"var _jsxFileName = \"/Users/student/development/assignments/module6/02-rock-the-vote/client/src/context/ControversyProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //import controversy from '../../../models/controversy'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReviewContext = /*#__PURE__*/React.createContext(); //Here we want to create a header to hold our token to get controversies by user\n//we create our own instance of axios\n\nconst userAxios = axios.create(); //then we add the Authorization and bearer stuff to it, in the request\n\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport default function ControversyProvider(props) {\n  _s();\n\n  const initialState = {\n    controversies: [],\n    comments: [],\n    upVotes: 0,\n    downVotes: 0\n  };\n  const {\n    reviewState,\n    setReviewState\n  } = useState(initialState);\n  useEffect(() => {\n    userAxios.get(\"/api/controversies/user\").then(res => {\n      setReviewState(prevState => ({ ...prevState,\n        controversies: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }, []);\n\n  function addReview(newReview) {\n    //the userAxios has the token in it now\n    userAxios.post(\"/api/controversies\", newReview).then(res => {\n      setReviewState(prevState => ({ ...prevState,\n        controversies: [...prevState.controversies, newReview]\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  return /*#__PURE__*/_jsxDEV(ReviewContext.Provider, {\n    value: { ...reviewState,\n      addReview\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControversyProvider, \"64euK0rb90QHvPculllGjGefQYQ=\");\n\n_c = ControversyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControversyProvider\");","map":{"version":3,"sources":["/Users/student/development/assignments/module6/02-rock-the-vote/client/src/context/ControversyProvider.js"],"names":["React","useState","useEffect","axios","ReviewContext","createContext","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","ControversyProvider","props","initialState","controversies","comments","upVotes","downVotes","reviewState","setReviewState","get","then","res","prevState","data","catch","err","console","log","response","errMsg","addReview","newReview","post","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;AAEA,OAAO,MAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAN,EAAtB,C,CAGP;AACA;;AACA,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,EAAlB,C,CAEA;;AACAD,SAAS,CAACE,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmCC,MAAM,IAAI;AAC3C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACFH,EAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;AACA,SAAOD,MAAP;AACC,CAJD;AAMA,eAAe,SAASM,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAEjD,QAAMC,YAAY,GAAG;AACnBC,IAAAA,aAAa,EAAE,EADI;AAEnBC,IAAAA,QAAQ,EAAE,EAFS;AAGnBC,IAAAA,OAAO,EAAE,CAHU;AAInBC,IAAAA,SAAS,EAAE;AAJQ,GAArB;AAOA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCxB,QAAQ,CAACkB,YAAD,CAAhD;AAEAjB,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,SAAS,CAACoB,GAAV,CAAc,yBAAd,EACGC,IADH,CACQC,GAAG,IAAI;AACXH,MAAAA,cAAc,CAACI,SAAS,KAAK,EAC3B,GAAGA,SADwB;AAE3BT,QAAAA,aAAa,EAAGQ,GAAG,CAACE;AAFO,OAAL,CAAV,CAAd;AAKD,KAPH,EAQGC,KARH,CAQSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAJ,CAAaL,IAAb,CAAkBM,MAA9B,CARhB;AASD,GAVQ,EAUN,EAVM,CAAT;;AAYA,WAASC,SAAT,CAAmBC,SAAnB,EAA8B;AAC5B;AACAhC,IAAAA,SAAS,CAACiC,IAAV,CAAe,oBAAf,EAAqCD,SAArC,EACCX,IADD,CACMC,GAAG,IAAI;AACXH,MAAAA,cAAc,CAACI,SAAS,KAAK,EAC3B,GAAGA,SADwB;AAE3BT,QAAAA,aAAa,EAAE,CAAE,GAAGS,SAAS,CAACT,aAAf,EAA8BkB,SAA9B;AAFY,OAAL,CAAV,CAAd;AAID,KAND,EAOCP,KAPD,CAOOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAJ,CAAaL,IAAb,CAAkBM,MAA9B,CAPd;AAQD;;AAGD,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE,EACL,GAAGZ,WADE;AAELa,MAAAA;AAFK,KADT;AAAA,cAKGnB,KAAK,CAACsB;AALT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA9CuBvB,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n//import controversy from '../../../models/controversy'\n\nexport const ReviewContext = React.createContext()\n\n\n//Here we want to create a header to hold our token to get controversies by user\n//we create our own instance of axios\nconst userAxios = axios.create()\n\n//then we add the Authorization and bearer stuff to it, in the request\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\")\nconfig.headers.Authorization = `Bearer ${token}`\nreturn config\n})\n\nexport default function ControversyProvider(props) {\n\n  const initialState = {\n    controversies: [],\n    comments: [],\n    upVotes: 0,\n    downVotes: 0\n  }\n\n  const { reviewState, setReviewState } = useState(initialState)\n\n  useEffect(()=>{\n    userAxios.get(\"/api/controversies/user\")\n      .then(res => {\n        setReviewState(prevState => ({\n          ...prevState,\n          controversies : res.data\n        })\n        )\n      })\n      .catch(err => console.log(err.response.data.errMsg))\n  }, [])\n\n  function addReview(newReview) {\n    //the userAxios has the token in it now\n    userAxios.post(\"/api/controversies\", newReview)\n    .then(res => {\n      setReviewState(prevState => ({\n        ...prevState,\n        controversies: [ ...prevState.controversies, newReview]\n      }))\n    })\n    .catch(err => console.log(err.response.data.errMsg))\n  }\n\n\n  return (\n    <ReviewContext.Provider\n      value={{\n        ...reviewState,\n        addReview\n      }} >\n      {props.children}\n    </ReviewContext.Provider>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}