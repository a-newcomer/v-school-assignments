{"ast":null,"code":"var _jsxFileName = \"/Users/student/development/assignments/module6/02-rock-the-vote/client/src/context/UserProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext(); //Here we want to create a header to hold our token to get controversies by user\n//we create our own instance of axios\n\nconst userAxios = axios.create(); //then we add the Authorization and bearer stuff to it, in the request\n\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport default function UserProvider(props) {\n  _s();\n\n  //console.log('user provider context props:', props)\n  const initState = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n    token: localStorage.getItem(\"token\") || \"\",\n    controversiesByCurrentUser: [],\n    errMsg: \"\"\n  };\n  const [userState, setUserState] = useState(initState);\n  console.log(\"in context controversies: \", userState.controversiesByCurrentUser);\n\n  function signup(credentials) {\n    axios.post(\"/auth/signup\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"token\", token);\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthErr(err.response.data.errMsg));\n  }\n\n  function login(credentials) {\n    axios.post(\"/auth/login\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"token\", token);\n      getUserReviews();\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthErr(err.response.data.errMsg));\n  }\n\n  function logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setUserState({\n      user: {},\n      token: \"\",\n      controversiesByCurrentUser: []\n    });\n  }\n\n  function handleAuthErr(errMsg) {\n    setUserState(prevState => ({ ...prevState,\n      errMsg\n    }));\n  }\n\n  function resetAuthErr() {\n    setUserState(prevState => ({ ...prevState,\n      errMsg: \"\"\n    }));\n  } //* we use this in the login function to show reviews immediately, but we also need to use it in useEffect to persist them\n\n\n  function getUserReviews() {\n    //the userAxios has the token in it now\n    userAxios.get(\"/api/controversies/user\").then(res => {\n      setUserState(prevState => ({ ...prevState,\n        controversiesByCurrentUser: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  useEffect(() => {\n    getUserReviews();\n  }, []);\n\n  function addReview(newReview) {\n    //the userAxios has the token in it now\n    userAxios.post(\"/api/controversies\", newReview).then(res => {\n      setUserState(prevState => ({ ...prevState,\n        controversiesByCurrentUser: [...prevState.controversiesByCurrentUser, newReview]\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: { ...userState,\n      signup,\n      login,\n      logout,\n      //getUserReviews, \n      addReview,\n      resetAuthErr\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProvider, \"THFjcFOcJ3N5Rc5QAWz5270EhIQ=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/student/development/assignments/module6/02-rock-the-vote/client/src/context/UserProvider.js"],"names":["React","useState","useEffect","axios","UserContext","createContext","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","UserProvider","props","initState","user","JSON","parse","controversiesByCurrentUser","errMsg","userState","setUserState","console","log","signup","credentials","post","then","res","data","setItem","stringify","prevUserState","catch","err","handleAuthErr","response","login","getUserReviews","logout","removeItem","prevState","resetAuthErr","get","addReview","newReview","children"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport const UserContext = React.createContext()\n\n//Here we want to create a header to hold our token to get controversies by user\n//we create our own instance of axios\nconst userAxios = axios.create()\n//then we add the Authorization and bearer stuff to it, in the request\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\")\nconfig.headers.Authorization = `Bearer ${token}`\nreturn config\n})\n\nexport default function UserProvider(props) {\n\n//console.log('user provider context props:', props)\n\nconst initState = { \n  user:JSON.parse(localStorage.getItem(\"user\")) || {}, \n  token: localStorage.getItem(\"token\") || \"\",\n  controversiesByCurrentUser: [],\n  errMsg: \"\"\n}\nconst [ userState, setUserState ] = useState(initState);\nconsole.log(\"in context controversies: \", userState.controversiesByCurrentUser)\nfunction signup(credentials) {\n  axios.post(\"/auth/signup\", credentials)\n    .then(res => {\n      const { user, token } = res.data\n      localStorage.setItem(\"user\", JSON.stringify(user))\n      localStorage.setItem(\"token\", token)\n      setUserState (prevUserState => ({\n        ...prevUserState, \n        user, \n        token\n      }))\n    })\n    .catch(err => handleAuthErr(err.response.data.errMsg))\n}\n\nfunction login(credentials) {\n  axios.post(\"/auth/login\", credentials)\n  .then(res => {\n    const { user, token } = res.data\n      localStorage.setItem(\"user\", JSON.stringify(user))\n      localStorage.setItem(\"token\", token)\n      getUserReviews()\n      setUserState (prevUserState => ({\n        ...prevUserState, \n        user, \n        token\n      }))\n  })\n  .catch(err => handleAuthErr(err.response.data.errMsg))\n}\n\nfunction logout() {\n  localStorage.removeItem(\"token\")\n  localStorage.removeItem(\"user\")\n  setUserState({\n    user: {},\n    token: \"\",\n    controversiesByCurrentUser: []\n  })\n}\n\nfunction handleAuthErr(errMsg) {\n  setUserState(prevState => ({\n    ...prevState,\n    errMsg\n  }))\n}\n\nfunction resetAuthErr() {\n  setUserState(prevState => ({\n    ...prevState,\n    errMsg: \"\"\n  }))\n}\n//* we use this in the login function to show reviews immediately, but we also need to use it in useEffect to persist them\nfunction getUserReviews() {\n  //the userAxios has the token in it now\n  userAxios.get(\"/api/controversies/user\")\n    .then(res => {\n      setUserState(prevState => ({\n        ...prevState,\n        controversiesByCurrentUser: res.data\n      })\n     )\n    })\n    .catch(err => console.log(err.response.data.errMsg))\n}\n\n\nuseEffect(()=>{\n  getUserReviews()\n}, [])\n\nfunction addReview(newReview) {\n  //the userAxios has the token in it now\n  userAxios.post(\"/api/controversies\", newReview)\n  .then(res => {\n    setUserState(prevState => ({\n      ...prevState,\n      controversiesByCurrentUser: [ ...prevState.controversiesByCurrentUser, newReview]\n    }))\n  })\n  .catch(err => console.log(err.response.data.errMsg))\n}\n\n  return  (\n    <UserContext.Provider\n      value={{\n        ...userState,\n        signup,\n        login,\n        logout,\n        //getUserReviews, \n        addReview,\n        resetAuthErr\n      }} >\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}